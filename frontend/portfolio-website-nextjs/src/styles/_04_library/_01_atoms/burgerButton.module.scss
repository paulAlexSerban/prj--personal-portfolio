@import "../../_00_abstracts/abstracts.scss";
$breakpoints: $column-grid-12;
$useModules: true;
$block: "burgerButton";

/* ------------------------------------ *\
 * BURGER BUTTON ORGANISM
\* ------------------------------------ */

.#{$block} {
    @include e("base") {
        padding: var(--static-40);
        position: absolute;
        top: 50%;
        right: 0;
        width: 50px;
        height: 30px;
        padding: 0;
        appearance: button;
        border: none;
        background-color: transparent ;
        box-shadow: inset 1px -3px -0 -1px var(--text-color);
        transform: translateY(-50%);

        &:focus {
            outline-offset: 4px;
        }

        &::after,
        &::before {
            position: absolute;
            content: "";
            display: block;
            height: 2px;
            background-color: var(--text-color);
        }

        &::before {
            top: 0;
            left: 0;
            width: 100%;
        }

        &::after {
            top: 50%;
            right: 0;
            width: 50%;
            transform: translate(0, -50%);
        }

        &:hover {
            cursor: pointer;
        }

        @include m("isOpen") {
            animation-name: burgerOpen;
            animation-duration: 0.5s;
            animation-fill-mode: forwards;
            animation-timing-function: ease-in-out;
          
            &::after {
              animation-name: burgerAfterOpen;
              animation-duration: 1s;
              animation-delay: 0.5s;
              animation-fill-mode: forwards;
              animation-timing-function: ease-in-out;
            }
          
            &::before {
              animation-name: burgerBeforeOpen;
              animation-duration: 1s;
              animation-delay: 0.5s;
              animation-fill-mode: forwards;
              animation-timing-function: ease-in-out;
            }
          }

          @include m("isClosed") {
            animation-name: burgerClose;
            animation-duration: 0.5s;
            animation-delay: 1s;
            animation-direction: reverse;
            animation-fill-mode: backwards;
            animation-timing-function: ease-in-out;
          
            &::after {
              animation-name: burgerAfterClose;
              animation-duration: 1s;
              animation-direction: reverse;
              animation-fill-mode: backwards;
              animation-timing-function: ease-in-out;
            }
          
            &::before {
              animation-name: burgerBeforeClose;
              animation-duration: 1s;
              animation-direction: reverse;
              animation-fill-mode: backwards;
              animation-timing-function: ease-in-out;
          }
    }
}

    @include e("line") {
        position: absolute;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        border: 0;
        clip: rect(0, 0, 0, 0);
        overflow: hidden;
    }
}

@keyframes burgerOpen {
    0% {
      box-shadow: inset 1px -3px -0 -1px var(--text-color);
    }
  
    100% {
      box-shadow: inset 1px -3px -0 -1px transparent;
    }
  }

  @keyframes burgerAfterOpen {
    0% {
      width: 50%;
    }
  
    25% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(1);
    }
  
    25% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(1);
    }
  
    50% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(0.6);
    }
  
    50% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(0.6);
    }
  
    75% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(0.6);
    }
  
    100% {
      width: 100%;
      transform: translate(0, -50%) rotate(45deg) scaleX(0.6);
    }
  }

  @keyframes burgerBeforeOpen {
    0% {
      transform: translateY(0) rotate(0) scaleX(1);
    }
  
    25% {
      top: 0;
      transform: translateY(0) rotate(0) scaleX(1);
    }
  
    25% {
      top: 0;
      transform: translateY(0) rotate(0) scaleX(1);
    }
  
    50% {
      top: 0;
      transform: translateY(0) rotate(0) scaleX(0.6);
    }
  
    75% {
      top: 50%;
      transform: translateY(-50%) rotate(0) scaleX(0.6);
    }
  
    75% {
      top: 50%;
      transform: translateY(-50%) rotate(0) scaleX(0.6);
    }
  
    100% {
      top: 50%;
      transform: translateY(-50%) rotate(-45deg) scaleX(0.6);
    }
  }


@keyframes burgerClose {
    0% {
      box-shadow: inset 1px -3px -0 -1px var(--text-color);
    }
  
    100% {
      box-shadow: inset 1px -3px -0 -1px transparent;
    }
  }
  
  @keyframes burgerAfterClose {
    0% {
      width: 50%;
    }
  
    25% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(1);
    }
  
    25% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(1);
    }
  
    50% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(0.6);
    }
  
    50% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(0.6);
    }
  
    75% {
      width: 100%;
      transform: translate(0, -50%) rotate(0) scaleX(0.6);
    }
  
    100% {
      width: 100%;
      transform: translate(0, -50%) rotate(45deg) scaleX(0.6);
    }
  }
  
  @keyframes burgerBeforeClose {
    0% {
      transform: translateY(0) rotate(0) scaleX(1);
    }
  
    25% {
      top: 0;
      transform: translateY(0) rotate(0) scaleX(1);
    }
  
    25% {
      top: 0;
      transform: translateY(0) rotate(0) scaleX(1);
    }
  
    50% {
      top: 0;
      transform: translateY(0) rotate(0) scaleX(0.6);
    }
  
    75% {
      top: 50%;
      transform: translateY(-50%) rotate(0) scaleX(0.6);
    }
  
    75% {
      top: 50%;
      transform: translateY(-50%) rotate(0) scaleX(0.6);
    }
  
    100% {
      top: 50%;
      transform: translateY(-50%) rotate(-45deg) scaleX(0.6);
    }
  }
  