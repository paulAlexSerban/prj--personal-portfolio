#!/bin/bash
# makes sure the folder containing the script will be the root folder
cd "$(dirname "$0")" || exit

source ../.env.development

while getopts ":e:" opt; do
  case $opt in
  e) ENV="$OPTARG" ;;
  *) usage ;;
  esac
done

if [[ -z $ENV ]]; then
  ENV=development
fi

GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [[ $ENV == 'development' ]]; then
  source ../.env
fi

# Colors for printing messages
NC='\033[0m' # No Color
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'

print_info() {
  echo -e "${GREEN} [ info ] ${NC}" "$1"
}

print_info 'Building... - should copy assets from ./assets/dist to public'

function pullS3Content() {
  print_info "Pulling content from prod AWS S3 bucket to  ./content/prod folder, set cache TTL to 24h"
  node ../aws/pull-prod-content.js
}

function cleanDistFolder() {
  print_info "Cleaning ./content/dist folder"
  rm -rfv ../content/dist/*
  mkdir -p ../content/dist
}

function copyContent() {
  local arg1=$1
  print_info "Copying content from ./content/$arg1 to ./content/dist"
  cp -rfv ../content/$arg1/* ../content/dist/
}

export NODE_ENV=$ENV
print_info "Building from $GIT_BRANCH branch"
pullS3Content
cleanDistFolder

if [[ "$NODE_ENV" == 'production' ]]; then
  copyContent prod
else
  copyContent test
fi

export GA_MEASUREMENT_ID
export SITE_URL
npm --prefix .. run build
npm --prefix .. run sitemap
node ../seo/indexnow
# use awk to remove the line starting with Host
awk '!/^Host/' ../out/robots.txt > ../out/temp.txt
# use mv to rename the file
mv ../out/temp.txt ../out/robots.txt
