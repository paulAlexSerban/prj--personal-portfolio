name: CI/CD - PRODUCTION

on:
    workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow one concurrent deployment
concurrency:
    group: 'production'
    cancel-in-progress: true

env:
    NODE_VERSION: 18.17.1
    FE_NEXTJS_PROJECT_ROOT: frontend/portfolio-website
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    SITE_URL: ${{ secrets.SITE_URL }}
    ASSETS_PATH: ${{ secrets.ASSETS_PATH }}
    SITE_HOSTNAME: ${{ secrets.SITE_HOSTNAME }}
    INDEX_NOW_API_KEY: ${{ secrets.INDEX_NOW_API_KEY }}
    S3_BUCKET_REGION:  ${{ secrets.S3_BUCKET_REGION }}
    S3_CONTENT_PRODUCTION_BUCKET: ${{ secrets.S3_CONTENT_PRODUCTION_BUCKET }}
    NODE_ENV: production
    
jobs:
    deploy:
        name: 'Deploy To PRODUCTION'
        runs-on: ubuntu-latest

        steps:
            - name: "üì•  Checkout repository"
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: "üîç  Verify Changed Files"
              uses: tj-actions/changed-files@v35
              id: changed-frontend-portfolio-website-files
              with:
                  files: ${{ env.FE_NEXTJS_PROJECT_ROOT }}/**/*

            - name: "Check code scanning"
              run: |
                  echo \"Error: no code scanning checks implemented\"
            # - name: "üöÄ Initialize CodeQL"
            #   uses: github/codeql-action/init@v2
            #   with:
            #       languages: ${{ matrix.language }}
            # - name: "üì•  Checkout repository"
            #   uses: actions/checkout@v3
            #   with:
            #       fetch-depth: 0

            # - name: "üèóÔ∏è  Autobuild"
            #   uses: github/codeql-action/autobuild@v2
            # - name: Perform CodeQL Analysis
            #   uses: github/codeql-action/analyze@v2

            - name: "üîÑ  Cache node_modules"
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: ${{ runner.os }}-node-

            - name: "üîß  Setup NodeJS ${{ env.NODE_VERSION }}"
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: "üîß  Install npm@latest & CI Deps"
              run: |
                 npm i -g npm@latest
                 npm ci

            - name: "Check code formatting"
              run: |
                  echo \"Error: no format check specified\"

            - name: "üîß  Install project modules dependencies"
              run: |
                  bash modulize -e production -p install

            - name: "Check code linting"
              run: |
                  echo \"Error: no lint specified\"

            - name: "Run unit tests"
              run: |
                  echo \"Error: no unit-test specified\"

            - name: "Run integration tests"
              run: |
                  echo \"Error: no integration-test specified\"

            - name: "Build"
              run: |
                  bash modulize -e production -p build

            - name: "Package"
              run: |
                  bash modulize -e production -p package

            - name: Deploy
              uses: reggionick/s3-deploy@v3
              with:
                  folder: package/prj--portfolio-website
                  bucket: ${{ secrets.S3_PRODUCTION_BUCKET }}
                  bucket-region: ${{ secrets.S3_BUCKET_REGION }}
                  dist-id: ${{ secrets.CLOUDFRONT_PRODUCTION_DISTRIBUTION_ID }}
                  invalidation: /
                  delete-removed: true
                  no-cache: true
                  private: true
                  filesToInclude: ".*/*,*/*,**"
