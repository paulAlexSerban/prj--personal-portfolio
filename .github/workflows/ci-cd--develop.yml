name: CI/CD - Develop

on:
    push:
        branches:
            - develop
    pull_request:
        types: [synchronize]
    workflow_dispatch:

env:
    NODE_VERSION: 16.19.0
    FE_NEXTJS_PROJECT_ROOT: frontend/portfolio-website
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    S3_BUCKET_REGION: ${{ secrets.S3_BUCKET_REGION }}
    SITE_URL: ${{ secrets.DEV_SITE_URL }}
    ASSETS_PATH: ${{ secrets.ASSETS_PATH }}

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        permissions:
            actions: read
            contents: read
            security-events: write
        strategy:
            fail-fast: false
            matrix:
                language: ["javascript"]
        steps:
            - name: "üì•  Checkout repository"
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: "üîç  Verify Changed Files"
              uses: tj-actions/changed-files@v35
              id: changed-frontend-portfolio-website-files
              with:
                  files: ${{ env.FE_NEXTJS_PROJECT_ROOT }}/**/*
            - name: "Check code scanning"
              run: |
                  echo \"Error: no code scanning checks implemented\"
            # - name: "üöÄ Initialize CodeQL"
            #   uses: github/codeql-action/init@v2
            #   with:
            #       languages: ${{ matrix.language }}
            # - name: "üì•  Checkout repository"
            #   uses: actions/checkout@v3
            #   with:
            #       fetch-depth: 0

            # - name: "üèóÔ∏è  Autobuild"
            #   uses: github/codeql-action/autobuild@v2
            # - name: Perform CodeQL Analysis
            #   uses: github/codeql-action/analyze@v2

            - name: "üîÑ  Cache node_modules"
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: ${{ runner.os }}-node-

            - name: "üîß  Setup NodeJS ${{ env.NODE_VERSION }}"
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: "üîß  Install npm@latest & CI Deps"
              run: |
                  npm i -g npm@latest
                  npm ci

            - name: "Check code formatting"
              run: |
                  echo \"Error: no format check specified\"

            - name: "üîß  Install project modules dependencies"
              run: |
                  bash modulize.bash -e production -p install

            - name: "Check code linting"
              run: |
                  echo \"Error: no lint specified\"

            - name: "Run unit tests"
              run: |
                  echo \"Error: no unit-test specified\"

            - name: "Run integration tests"
              run: |
                  echo \"Error: no integration-test specified\"

            - name: "Build"
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              run: |
                  bash modulize.bash -e production -p build

            - name: "Package"
              run: |
                  bash modulize.bash -e production -p package

            - name: "Upload Artifact"
              uses: actions/upload-artifact@v3
              with:
                  name: package-personal-website
                  path: package/prj--portfolio-website/ # or path/to/artifact

            - name: Deploy
              uses: reggionick/s3-deploy@v3
              with:
                  folder: package/prj--portfolio-website
                  bucket: ${{ secrets.S3_DEVELOP_BUCKET }}
                  bucket-region: ${{ secrets.S3_BUCKET_REGION }}
                  dist-id: ${{ secrets.CLOUDFRONT_DEVELOP_DISTRIBUTION_ID }}
                  invalidation: /
                  delete-removed: true
                  no-cache: true
                  private: true
                  filesToInclude: ".*/*,*/*,**"
